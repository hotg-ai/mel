var searchIndex = {};
searchIndex["mel"] = {"doc":"example of using the mel create to build up a filter matrix that can then be used to repeatedly and efficiently (in-place) transform a huge (2048) power spectrum vector to a mel filtered vector of lower dimension (100).","items":[[3,"MelScalingMatrixEnumerator","mel","col index changes fastest",null,null],[5,"hertz_from_mel","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"mel_from_hertz","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"enumerate_mel_scaling_matrix_base","","(or many vectors at once in form of a matrix) to transform that vector into mel space. efficiently rows are mel cols are freq TODO get frequency index pair for nth mel TODO enumerate scaling vector TODO which dimension first",null,null],[5,"enumerate_mel_scaling_matrix","","one filter per row",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"}],"output":{"name":"melscalingmatrixenumerator"}}],[11,"is_done","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_after_last_row","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_after_last_col","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"index","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"remaining","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"len","","",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}]],"paths":[[3,"MelScalingMatrixEnumerator"]]};
initSearch(searchIndex);
